при декомпиляции Ghidra видим:
srand - функция задаёт начальное значение для генератора номеров псевдослучайное, используемого функцией Rand.
Куда аргументом передаётся time функция, которая возвращает значение времени.
#include "time.h"
#include "stdio.h"

int main(void) {
    printf("%ld", time(0));
    return 0;
};

> $ ./a.out                                             [±main ●●]
1644683961
Получаемый пароль мы видим в мейнике, что это int.
Это значение отправляется в функцию test со значением 0x1337d00d = 322424845 в десят. системе счисления
Далее в функции test вычисляется разница 322424845 и нашим значением.
Если разница до 21, то отправляется в функцию decrypt.
Если не входит ни в одно значение до 21, то так же отправляется в вышеназванную функцию.

В функции decrypt получает наше значение.
Создаётся буфер с неизвестными символами "Qu`sfg~sf{}|}|a3".
Дальше наше значение при xor с этим буфером должен давать слово
"Congratulations!". 0x11 это 17 символов для сравнения в strncmp.
Соответственно, возьмём число 322424845 - 21 = 322424824 и запустим бутворфс.
Или просто найдём разницу значений между 3 и ! - последними символами слова и буффера.
Разница составляет 18.
322424845 - 18 = 322424827

level03@OverRide:~$ ./level03
***********************************
*               level03         **
***********************************
Password:322424827
$ whoami
level04
$ cat /home/users/level04/.pass
kgv3tkEb9h2mLkRsPkXRfc2mHbjMxQzvb2FrgKkf